import sb from"./StringBox.js";const fnVoid=()=>{},fnParse=t=>t&&JSON.parse(t),isset=t=>null!=t;function fnReset(t){return t.splice(0,t.length),t}function fnEachPrev(e,r){let n=0;for(let t=e.length-1;-1<t;t--)r(e[t],t,n++);return e}function Collection(){const r=this;this.isset=isset,this.size=sb.size,this.empty=sb.empty,this.parse=fnParse,this.split=sb.split,this.eachPrev=fnEachPrev,this.reset=t=>t?fnReset(t):[],this.shuffle=t=>t.sort(()=>.5-Math.random()),this.indexOf=(t,e)=>t?t.indexOf(e):-1,this.multisort=function(t,i,o){return o=o||[],t.sort((e,r)=>{let n=0;for(let t=0;t<i.length&&0==n;t++){var s=i[t];n="desc"==o[t]?s(r,e):s(e,r)}return n}),r},this.render=(r,n,s)=>{const i={};return s=s||i,i.size=s.size=r.length,r.map((t,e)=>(i.index=e,i.count=e+1,n(t,i,s,r))).join("")},this.copy=function(e,r,t){return t?t.forEach(t=>{e[t]=r[t]}):Object.assign(e,r),e},this.clone=function(t,e){return r.copy({},t,e)},this.clear=function(e,t){if(t)t.forEach(t=>delete e[t]);else for(var r in e)delete e[r];return e},this.merge=function(t,r,n){return n=n||{},t.forEach((t,e)=>{n[t]=r[e]}),n},Object.copy=r.copy,Object.clone=r.clone,Object.clear=r.clear,Object.merge=r.merge}globalThis.void=fnVoid,globalThis.isset=isset,JSON.size=sb.size,JSON.read=fnParse,Array.prototype.reset=function(){return fnReset(this)},Array.prototype.eachPrev=function(t){return fnEachPrev(this,t)},Array.prototype.item=function(t){return this[t%this.length]},Array.prototype.last=function(){return this.at(-1)};export default new Collection;